#!/bin/bash

function restart-pipewire {
    systemctl --user restart pipewire.service
    systemctl --user restart pipewire-pulse.service
}

function load-modules {
    pactl load-module module-null-sink media.class=Audio/Sink sink_name=my-combined-sink channel_map=stereo
    pactl load-module module-null-sink media.class=Audio/Source/Virtual sink_name=my-virtualmic channel_map=front-left,front-right
}

function link-modules {
    pw-link my-combined-sink:monitor_FL my-virtualmic:input_FL
    pw-link my-combined-sink:monitor_FR my-virtualmic:input_FR
}

function setup-modules {
    restart-pipewire
    load-modules
    sleep 1
    link-modules
}

function link-akira {
    pw-link bluez_output.60_AB_D2_41_8E_E6.1:monitor_FL my-combined-sink:playback_FL
    pw-link bluez_output.60_AB_D2_41_8E_E6.1:monitor_FR my-combined-sink:playback_FR
}

function link-integrated-speakers {
    pw-link alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__hw_sofhdadsp__sink:monitor_FL my-combined-sink:playback_FL
    pw-link alsa_output.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__hw_sofhdadsp__sink:monitor_FR my-combined-sink:playback_FR
}

function link-akira-mic {
    pw-link bluez_input.60_AB_D2_41_8E_E6.0:capture_MONO my-combined-sink:playback_FL
    pw-link bluez_input.60_AB_D2_41_8E_E6.0:capture_MONO my-combined-sink:playback_FR
}

function link-integrated-mic {
    pw-link alsa_input.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__hw_sofhdadsp_6__source:capture_FL my-combined-sink:playback_FL
    pw-link alsa_input.pci-0000_00_1f.3-platform-skl_hda_dsp_generic.HiFi__hw_sofhdadsp_6__source:capture_FR my-combined-sink:playback_FR
}

function link-program {
    program_name=$1
    pw-link "$program_name":output_FL my-combined-sink:playback_FL
    pw-link "$program_name":output_FR my-combined-sink:playback_FR
}

function link-programs {
    link-program Brave
    link-program Discord
    link-program mpv
    link-program Chromium
    link-program Firefox
}

function setup-links {
    #link-akira
    #link-integrated-speakers
    link-programs
    link-akira-mic
    link-integrated-mic
}

function check-for-new-devices {
    pw-link -o; pw-link -i
}

# script_name=$(basename "$0")
# XDG_STATE_HOME="${XDG_STATE_HOME:-$HOME/.local/state}"
# mkdir -p "$XDG_STATE_HOME/$script_name"
# 
# device_state_file="$XDG_STATE_HOME/$script_name/device_state"

setup-modules
sleep 5
setup-links

prog_name=$(basename $0)
msg="$prog_name: Setup completed"
echo "$msg"
notify-send "$msg"
