#!/bin/bash

# This script startsup the shutdown_and_restart and logs it's usage.

LOC="$(dirname "$(realpath "$0")")"
EXEC_COMMAND="$LOC/shutdown_and*"
LOGDIR=~/logs
LOGNAME="pclock_call_log"
LF=$LOGDIR/$LOGNAME
SUS_DUR=$((31*60))
DOLOG=true

usage() { echo "usage:" && grep "[[:space:]].)\ #" $0 | \
            sed 's/[[:space:]]|[[:space:]]\*//' | \
            sed 's/#//' | sed -r 's/([a-z])\)/-\1/'; exit 0; }

while getopts "sm:t:l" option; do
    case $option in
        s) # Set this option to suspend
            SUSPEND=true
            ;;
        m) # A message writen to log file
            LOGMSG=${OPTARG}
            ;;
        t) # Time to suspend in minutes
            SUS_DUR=$((${OPTARG} * 60))
            ;;
        l) # Don't log use
            DOLOG=false
            ;;
        h | *) # Display help
            echo "logfile: $LF"
            echo -e "default suspend time: $SUS_DUR s \n"
            usage
            ;;
    esac
done
[[ $OPTIND -eq 1 ]] && usage
[[ -z $LOGMSG ]] && echo "Please leave a message with -m about the use case." && exit 1

[[ ! -d "$LOGDIR" ]] && mkdir "$LOGDIR" && echo "$LOGDIR does not exist -> creating it"
[[ ! -e $LF ]] && touch $LF && echo "$LF does not exist -> creating it"

get_formated_time() 
{
    local dur=$1
    echo "$((dur / 60))m $((dur % 60))s"; 
}

log()
{
    local start_date=$1
    local start_time=$2

    local end_time=`date '+%s'`
    local dur=$((end_time - START_TIME))

    local msg="$start_date <- Start \n$(date) <- End \n"
    
    msg="$msg""Target suspend time $(get_formated_time $SUS_DUR)\n"
    [[ ! -z $SUSPEND ]] && msg="$msg""$(get_formated_time $dur) exec time" && [[ $dur -lt $SUS_DUR ]] && msg="$msg --- ABORTED BEVORE WAKEUP"
    [[ -z $SUSPEND ]] && msg="$msg""NOT SUSPENDED"
    msg="$msg \n"
    [[ ! -z $LOGMSG ]] && msg="$msg""Log msg: $LOGMSG \n"
    
    msg="$msg""------------------------------------------------------\n "
    echo -en $msg
    [[ $DOLOG == false ]] && echo 'DONT LOG TO FILE' && exit 0
    echo -en $msg >> $LF
    exit 0
}

START_DATE=`date`
START_TIME=`date '+%s'`

log_c() { log "$START_DATE" $START_TIME; }

trap log_c SIGINT
[[ ! -z $SUSPEND ]] && echo $(sudo $EXEC_COMMAND $SUS_DUR)
log_c
echo $msg
