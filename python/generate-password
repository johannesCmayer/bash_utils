import secrets
import argparse
from pathlib import Path
from pdb import set_trace as st
import sys

project_dir = Path(__file__).absolute().parent
eff_word_list = project_dir / 'eff_large_wordlist.txt'

parser = argparse.ArgumentParser(description='Generate a password based on the EFF_large_word_list, using cryptographic secure randomization.')
parser.add_argument('-n', '--number-of-words', type=int, default=6, help='The number of words the password should have')
args = parser.parse_args()

with eff_word_list.open() as f:
    lines = f.readlines()

words = []
for e in lines:
    k,v = e.strip().split('\t')
    words.append(v)

password = ""
for _ in range(args.number_of_words):
    idx = secrets.randbelow(len(words))
    password += f"{words[idx]} "

password = password.strip()
print(password, end='')

if sys.stdout.isatty():
    print()
