#!/usr/bin/python

from subprocess import check_output
import argparse
import tempfile
import os
from pdb import set_trace

parser = argparse.ArgumentParser()
parser.add_argument('input_file')
parser.add_argument('--debug', action='store_true')
args = parser.parse_args()

input_video_height = check_output(f"mediainfo '{args.input_file}' | grep Height | awk '{{print $3$4}}'", shell = True)
input_video_height = input_video_height.decode().strip()
input_video_height = int(input_video_height)
if input_video_height != 2160:
    raise Exception(f"The input video has a height of {input_video_height}. This program expects 4k video, and does not currently support other resolutions.")

extra_args = ""
if args.debug:
    extra_args = "-to 10"

print(os.getcwd())

# The aspect ratio is not 16 to 9, so we want to crop away some of the sides
width_for_16_by_9 = 960 * 16/9
cutoff_per_side = (2160 - width_for_16_by_9) / 2
first_column = cutoff_per_side 
last_column = 2160 - cutoff_per_side

out_file_name = f"{os.path.splitext(args.input_file)[0]}_SBS.mp4"
if args.debug:
    out_file_name = f"DEBUG_{out_file_name}"

with tempfile.TemporaryDirectory() as temp_dir:
    check_output(f"ffmpeg -i '{args.input_file}' -vf 'transpose=1,crop={last_column}:960:{first_column}:0'    {extra_args} '{temp_dir}'/1.mp4", shell=True)
    check_output(f"ffmpeg -i '{args.input_file}' -vf 'transpose=1,crop={last_column}:960:{first_column}:1920' {extra_args} '{temp_dir}'/2.mp4", shell=True)
    check_output(f"ffmpeg -i '{temp_dir}'/1.mp4 -i '{temp_dir}'/2.mp4 -filter_complex hstack '{temp_dir}'/3.mp4", shell=True)
    check_output(f"ffmpeg -i '{temp_dir}'/3.mp4 -vf 'scale=1920x1080' -aspect 16:9 '{out_file_name}'", shell=True)
