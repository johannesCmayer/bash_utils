#!/usr/bin/env fish

# This script renames a video file and moves it to a new youtube subfolder, and then generated thumbnails using dalle, based on provided prompts.

# Args
set name "$argv[1]"
set prompts "$name, digital art" "$argv[2..]"

# Global Configuration
set target 2023-07-30\ 18-22-39.mkv 
set images_per_prompt 3
set start_pwd (pwd)

function log
    echo "$argv" 1>&2
end

function download
    # Download all images from the json file returned by the dalle API
    set url_file "$argv[1]"
    set target_file "$argv[2]"
    for j in (jq .data[].url "$url_file" | sed 's/"//g')
        curl "$j" --output "$target_file"
    end
end

function get_dalle
    set -l name "$argv[1]"
    set -l prompt "$argv[2]"
    log "Generating image $name with prompt $prompt"
    curl https://api.openai.com/v1/images/generations \
                  -H "Content-Type: application/json" \
                  -H "Authorization: Bearer $OPENAI_API_KEY" \
                  -d "{
        \"prompt\": \"$prompt\",
        \"n\": 1,
        \"size\": \"1024x1024\"
      }" > urls.txt
    download "urls.txt" "$name"
    rm urls.txt
end

function get_dalle_edit
    set -l base_image $argv[1]
    set -l prompt $argv[2]
    set -l mask_image $argv[3]
    set -l target $argv[4]
    curl https://api.openai.com/v1/images/edits \
          -H "Authorization: Bearer $OPENAI_API_KEY" \
          -F image="@$base_image" \
          -F mask="@$mask_image" \
          -F prompt="$prompt" \
          -F n=1 \
          -F size="1024x1024" > urls.txt
    download "urls.txt" "$target"
    rm urls.txt
end

function extend_image
    # Extend a 1024x1024 image to 2048x1024
    set image_name "$argv[1]"
    set prompt "$argv[2]"
    set left_img left_img.png
    set right_img right_img.png
    log "extending the image to 2048x1024"
    magick "$image_name" -crop 512x1024+0+0 -background black -gravity east -extent 1024x1024 "$left_img"
    magick "$image_name" -crop 512x1024+512+0 -background black -gravity west -extent 1024x1024 "$right_img"

    # Generate the image generation mask
    convert -size 512x1024 canvas:black black.png
    convert black.png -background white -gravity east -extent 1024x1024 -transparent white left_mask.png
    convert black.png -background white -gravity west -extent 1024x1024 -transparent white right_mask.png
    rm black.png

    log "generating left side"
    get_dalle_edit "$left_img" "$prompt" "left_mask.png" "$left_img"

    log "generating right side"
    get_dalle_edit "$right_img" "$prompt" "right_mask.png" "$right_img"

    rm left_mask.png right_mask.png
    magick "$left_img" "$right_img" +append "$image_name"
    rm "$left_img" "$right_img"
end

function dalle2
    set -l prompt "$argv[1]"
    set -l name (python -c "import time; print(time.time())").png
    get_dalle "$name" "$prompt" 
    extend_image "$name" "$prompt"
    magick "$name" -crop 1820x1024+114+0 croped.png
    mv croped.png "$name"
    convert "$name" (basename "$name" .png).jpeg
    rm "$name"
end

function dalle
    # Generate images using dalle, that serve as thumnails
    set -l prompts $argv
    for p in $prompts
        for i in (seq "$images_per_prompt")
            log "generating prompt $p"
            dalle2 "$p"
        end
    end
end

log "starting"
dalle $prompts
cd "$start_pwd"
